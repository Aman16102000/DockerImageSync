name: Build and Push to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPO: imagesync
  DOCKER_IMAGE_NAME: initial_image

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    # - name: Cache Python dependencies
    #   uses: actions/cache@v2
    #   with:
    #     path: |
    #       ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('**/src/requirements.txt') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        echo "Root Directory: $(ls)"
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
        docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:$(git rev-parse --short HEAD)
        docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:$(git rev-parse --short HEAD)
